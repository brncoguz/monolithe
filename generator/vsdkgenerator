#!/usr/bin/env python

import argparse
import sys

sys.path.append("../")

if __name__ == '__main__':

    parser = argparse.ArgumentParser(description="Python SDK Generator.")

    # parser.add_argument('-f', "--filename",
    #                     help="local JSON filename",
    #                     action='store_true')

    parser.add_argument('-u', "--vsdurl",
                        dest="vsdurl",
                        help="URL of your VSD API where to get the get JSON information")

    parser.add_argument('-a', "--apiversion",
                        dest="apiversion",
                        help="version of the SDK to generate")

    parser.add_argument('-g', "--to-git",
                        help="Git repository URL")

    args = parser.parse_args()

    from src.lib import SwaggerParser
    from src.lib import Printer
    from src.lib import SDKWriter
    from src.lib import ModelsProcessor
    from src.lib import GitManager
    import shutil
    import os

    OUTPUT_DIRECTORY = 'codegen/%s' % args.apiversion

    url = 'http://github.mv.usa.alcatel.com/chserafi/vsdk' # args.to_git

    # git_manager = GitManager(url=url, branch=branch, directory=OUTPUT_DIRECTORY)
    # git_manager.clone()

    swagger_parser = SwaggerParser()
    resources = swagger_parser.grab_all(args.vsdurl, args.apiversion)

    processed_resources = ModelsProcessor.process(resources=resources)

    # directory = '%s/vsdk' % (OUTPUT_DIRECTORY)
    if os.path.exists(OUTPUT_DIRECTORY):
        shutil.rmtree(OUTPUT_DIRECTORY)

    shutil.copytree('../vsdk/', OUTPUT_DIRECTORY)

    SDKWriter.write(resources=processed_resources, directory=OUTPUT_DIRECTORY)

    # nb_diffs = git_manager.commit(message="Update")
    # Printer.log("COMMIT %s modifications" % nb_diffs)

    # git_manager.remove_directory()
