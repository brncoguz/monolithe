{
    "apiVersion": "V3_1",
    "swaggerVersion": "1.2",
    "basePath": "/",
    "resourcePath": "/VRS",
    "apis": [
        {
            "path": "/vports/{id}/vrss",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all VRS associated to a specific VPort",
                    "type": "VRS",
                    "nickname": "getVPORTSVRSs",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/vscs/{id}/vrss",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all VRS routers for a specific VSC controller",
                    "type": "VRS",
                    "nickname": "getVSCSVRSs",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/hscs/{id}/vrss",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all VRS routers for a specific hardware controller",
                    "type": "VRS",
                    "nickname": "getHSCSVRSs",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/vrss/{id}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "Read or Delete a specific VRS router",
                    "type": "VRS",
                    "nickname": "putVRSs",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Read or Delete a specific VRS router",
                    "type": "VRS",
                    "nickname": "deleteVRSs",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "GET",
                    "summary": "Read or Delete a specific VRS router",
                    "type": "VRS",
                    "nickname": "getVRSs",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/vms/{id}/vrss",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all VRSs associated toa specific VM",
                    "type": "VRS",
                    "nickname": "getVMSVRSs",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        }
    ],
    "models": {
        "VRS": {
            "id": "VRS",
            "description":"System Monitoring details for VRS connected to VSC or HSC",
            "properties": {
                "_fetchers":{
                    "type":"string",
                    "description":"internal property",
                    "enum":[
                            "Job",
                            "HSC",
                            "VPort",
                            "PortStatus",
                            "VSC",
                            "MultiNICVPort",
                            "VirtualMachine",
                            "EventLog",
                            "Alarm"
                    ]
                },
                "parentIDs": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Holds VRS controllers ids",
                    "type": "Array[String]",
                    "items": {
                        "$ref":"Collection of String"
                    }

                },
                "clusterNodeRole": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Indicate that the controller associated is primary, secondary or unknown. Possible values are PRIMARY, SECONDARY, NONE, .",
                    "type": "enum",
                    "enum": [
                              "SECONDARY",
                              "PRIMARY",
                              "NONE"
                    ]
                },
                "messages": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "An array of degraded messages.",
                    "type": "Array[String]",
                    "items": {
                        "$ref":"Collection of String"
                    }

                },
                "dynamic": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Flag to indicate it is dynamically configured or not.",
                    "type": "boolean"
                },
                "hypervisorConnectionState": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The VRS connection state with the hypervisor. Possible values are UP, DOWN, ADMIN_DOWN, DEGRADED, .",
                    "type": "enum",
                    "enum": [
                              "DEGRADED",
                              "DOWN",
                              "UP",
                              "ADMIN_DOWN"
                    ]
                },
                "hypervisorIdentifier": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The hypervisor IP (or name) associated with the VRS.",
                    "type": "string"
                },
                "hypervisorName": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The hypervisor name associated with the VRS.",
                    "type": "string"
                },
                "hypervisorType": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The hypervisor type associated with the VRS.",
                    "type": "string"
                },
                "address": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The IP of the VRS entity",
                    "type": "string"
                },
                "JSONRPCConnectionState": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The current JSON RPC connection status. Possible values are UP, DOWN, ADMIN_DOWN, DEGRADED, .",
                    "type": "enum",
                    "enum": [
                              "DEGRADED",
                              "DOWN",
                              "UP",
                              "ADMIN_DOWN"
                    ]
                },
                "lastEventName": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The last event name from the hypervisor.",
                    "type": "string"
                },
                "lastEventObject": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The last event object (including metadata) from the hypervisor.",
                    "type": "string"
                },
                "lastEventTimestamp": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The last event timestamp from the hypervisor.",
                    "type": "long"
                },
                "managementIP": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The management IP of the VRS entity",
                    "type": "string"
                },
                "multiNICVPortEnabled": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "VRS is in Multi-NIC VPORT Mode",
                    "type": "boolean"
                },
                "numberOfBridgeInterfaces": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Number of bridge interfaces defined in this VRS.",
                    "type": "int"
                },
                "numberOfHostInterfaces": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Number of host interfaces defined in this VRS.",
                    "type": "int"
                },
                "numberOfVirtualMachines": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Number of VMs defined in this VRS.",
                    "type": "int"
                },
                "peer": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The redundant peer id for the current VRS.",
                    "type": "string"
                },
                "personality": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "VRS personality. Possible values are VRSG, VRS, NSG, NONE, HARDWARE_VTEP, .",
                    "type": "enum",
                    "enum": [
                              "VRSG",
                              "VRS",
                              "HARDWARE_VTEP",
                              "NONE",
                              "NSG"
                    ]
                },
                "role": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Flag to indicate that VRS-G redundancy state (active/standby/standalone).  Only applicable for gateways. Possible values are MASTER, SLAVE, NONE, .",
                    "type": "enum",
                    "enum": [
                              "SLAVE",
                              "MASTER",
                              "NONE"
                    ]
                },
                "uptime": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "How long the VRS was up.",
                    "type": "long"
                },
                "averageCPUUsage": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Average CPU usage percentage.",
                    "type": "double"
                },
                "averageMemoryUsage": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Average memory usage percentage.",
                    "type": "double"
                },
                "currentCPUUsage": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Current CPU usage percentage.",
                    "type": "double"
                },
                "currentMemoryUsage": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Current memory usage percentage.",
                    "type": "double"
                },
                "description": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Description of the entity.",
                    "type": "string"
                },
                "disks": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Set of disk usage details.",
                    "type": "Array[DiskStats]",
                    "items": {
                        "$ref":"Collection of DiskStats"
                    }

                },
                "lastStateChange": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Last state change timestamp (in millis).",
                    "type": "long"
                },
                "location": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the entity to be associated with a location.",
                    "type": "string"
                },
                "name": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the entity with a name.",
                    "type": "string"
                },
                "peakCPUUsage": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Peek CPU usage percentage.",
                    "type": "double"
                },
                "peakMemoryUsage": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Peek memory usage percentage.",
                    "type": "double"
                },
                "productVersion": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Product version supported by this entity.",
                    "type": "string"
                },
                "status": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Computed status of the entity. Possible values are UP, DOWN, ADMIN_DOWN, DEGRADED, .",
                    "type": "enum",
                    "enum": [
                              "DEGRADED",
                              "DOWN",
                              "UP",
                              "ADMIN_DOWN"
                    ]
                },
                "creationDate": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Holds the time that this object was created.",
                    "type": "date"
                },
                "lastUpdatedBy": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the user that last modified this object.",
                    "type": "string"
                },
                "lastUpdatedDate": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Determines the time that this object was last updated.",
                    "type": "date"
                },
                "owner": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the user that has created this object.",
                    "type": "string"
                },
                "externalID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This attribute is set when an external management system is managing this object. When set, the VSD will issue a warning if the user tries to modify this object directly through the UI or the API. For example, if VMware vCloud or Openstack create a network, then this network cannot be deleted directly by a user without requiring extra confirmation. This allows integrations to separate between managed objects by external entities and directly managed objects.",
                    "type": "string"
                },
                "ID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is a unique ID for the object (UUID) that is auto-populated by the VSD and it is used in both the http URI or other objects to refer to the particular object.",
                    "type": "string"
                },
                "parentID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is the ID of the parent object.",
                    "type": "string"
                },
                "parentType": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is the type of parent object for the particular object.",
                    "type": "string"
                }
            }
        }
    }
}
