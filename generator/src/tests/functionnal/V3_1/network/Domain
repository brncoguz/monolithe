{
    "apiVersion": "V3_1",
    "swaggerVersion": "1.2",
    "basePath": "/",
    "resourcePath": "/Domain",
    "apis": [
        {
            "path": "/domains",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all domains. Permitted only for user with csproot/cms role",
                    "type": "Domain",
                    "nickname": "getDomains",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/domaintemplates/{id}/domains",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all domains associated to a given domaintemplate",
                    "type": "Domain",
                    "nickname": "getDOMAINTEMPLATESDomains",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/domains/{id}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "Read, modify and delete a specific domain",
                    "type": "Domain",
                    "nickname": "putDomains",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Read, modify and delete a specific domain",
                    "type": "Domain",
                    "nickname": "deleteDomains",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "GET",
                    "summary": "Read, modify and delete a specific domain",
                    "type": "Domain",
                    "nickname": "getDomains",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/enterprises/{id}/domains",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all domains or create a domain for a given enterprise",
                    "type": "Domain",
                    "nickname": "getENTERPRISESDomains",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Read all domains or create a domain for a given enterprise",
                    "type": "Domain",
                    "nickname": "postENTERPRISESDomains",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        }
    ],
    "models": {
        "Domain": {
            "id": "Domain",
            "description":"This object is used to manipulate domain state. A domain corresponds to a distributed Virtual Router and Switch (dVRS)",
            "properties": {
                "_fetchers":{
                    "type":"string",
                    "description":"internal property",
                    "enum":[
                            "BridgeInterface",
                            "EgressACLTemplate",
                            "VPort",
                            "Statistics",
                            "DHCPOption",
                            "HostInterface",
                            "VMInterface",
                            "PermittedAction",
                            "RedirectionTarget",
                            "PolicyGroup",
                            "StatisticsPolicy",
                            "VirtualMachine",
                            "StaticRoute",
                            "Group",
                            "IngressACLTemplate",
                            "Job",
                            "IngressAdvancedForwardingTemplate",
                            "SubNetwork",
                            "QosPrimitive",
                            "TCA",
                            "Zone",
                            "VPNConnect",
                            "EventLog",
                            "FloatingIp"
                    ]
                },
                "applicationDeploymentPolicy": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Application deployment policy. Possible values are NONE, ZONE, .",
                    "type": "enum",
                    "enum": [
                              "ZONE",
                              "NONE"
                    ]
                },
                "templateID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The ID of the template that this domain was created from. This should be set when instantiating a domain",
                    "type": "string"
                },
                "backHaulRouteDistinguisher": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Route distinguisher associated with the BackHaul Service in dVRS. It is an Read-Only parameter that cannot be provided by the user. System generates this identifier automatically",
                    "type": "string"
                },
                "backHaulRouteTarget": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Route target associated with the BackHaul Service in dVRS. It is an Read-Only parameter that cannot be provided by the user. System generates this identifier automatically",
                    "type": "string"
                },
                "backHaulVNID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Current BackHaul Network's  globally unique  VXLAN network identifier generated by VSD",
                    "type": "long"
                },
                "customerID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The customerID that is created in the VSC and identifies this dVRS. This is auto-generated by VSD",
                    "type": "long"
                },
                "description": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "A description string of the domain that is provided by the user",
                    "type": "string"
                },
                "DHCPBehavior": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "DHCPBehaviorType is an enum that indicates DHCP Behavior of VRS having VM's under this domain. Possible values are FLOOD, CONSUME ,RELAY Possible values are CONSUME, FLOOD, RELAY, .",
                    "type": "enum",
                    "enum": [
                              "CONSUME",
                              "FLOOD",
                              "RELAY"
                    ]
                },
                "DHCPServerAddress": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "when DHCPBehaviorType is RELAY, then DHCP Server IP Address needs to be set",
                    "type": "string"
                },
                "tunnelType": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Default Domain Tunnel Type .Possible values are VXLAN,GRE Possible values are DC_DEFAULT, GRE, VXLAN, .",
                    "type": "enum",
                    "enum": [
                              "DC_DEFAULT",
                              "VXLAN",
                              "GRE"
                    ]
                },
                "multicast": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "multicast is enum that indicates multicast policy on domain. Possible values are ENABLED ,DISABLED  and INHERITED Possible values are INHERITED, ENABLED, DISABLED, .",
                    "type": "enum",
                    "enum": [
                              "ENABLED",
                              "INHERITED",
                              "DISABLED"
                    ]
                },
                "labelID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The label associated with the dVRS. This is a read only attribute",
                    "type": "long"
                },
                "maintenanceMode": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "maintenanceMode is an enum that indicates if the Domain is accepting VM activation requests. Possible values are DISABLED, ENABLED and ENABLED_INHERITED Possible values are DISABLED, ENABLED, ENABLED_INHERITED, .",
                    "type": "enum",
                    "enum": [
                              "ENABLED",
                              "ENABLED_INHERITED",
                              "DISABLED"
                    ]
                },
                "associatedMulticastChannelMapID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The ID of the Multi Cast Channel Map  this domain is associated with. This has to be set when  enableMultiCast is set to ENABLED",
                    "type": "string"
                },
                "name": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The name of the domain. Valid characters are  alphabets, numbers, space and hyphen( - ).",
                    "type": "string"
                },
                "PATEnabled": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Indicates whether PAT is enabled for the subnets in this domain - ENABLED/DISABLED Possible values are INHERITED, ENABLED, DISABLED, .",
                    "type": "enum",
                    "enum": [
                              "ENABLED",
                              "INHERITED",
                              "DISABLED"
                    ]
                },
                "routeDistinguisher": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Route distinguisher associated with the dVRS. It is an optional parameter that can be provided by the user or auto-managed by VSD. System generates this identifier automatically, if not provided",
                    "type": "string"
                },
                "routeTarget": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Route target associated with the dVRS. It is an optional parameterthat can be provided by the user or auto-managed by VSDSystem generates this identifier automatically, if not provided",
                    "type": "string"
                },
                "serviceID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The serviceID of the Virtual Router created in VSC and is associated with this object. This is auto-generated by VSD",
                    "type": "long"
                },
                "creationDate": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Holds the time that this object was created.",
                    "type": "date"
                },
                "lastUpdatedBy": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the user that last modified this object.",
                    "type": "string"
                },
                "lastUpdatedDate": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Determines the time that this object was last updated.",
                    "type": "date"
                },
                "owner": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the user that has created this object.",
                    "type": "string"
                },
                "externalID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This attribute is set when an external management system is managing this object. When set, the VSD will issue a warning if the user tries to modify this object directly through the UI or the API. For example, if VMware vCloud or Openstack create a network, then this network cannot be deleted directly by a user without requiring extra confirmation. This allows integrations to separate between managed objects by external entities and directly managed objects.",
                    "type": "string"
                },
                "ID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is a unique ID for the object (UUID) that is auto-populated by the VSD and it is used in both the http URI or other objects to refer to the particular object.",
                    "type": "string"
                },
                "parentID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is the ID of the parent object.",
                    "type": "string"
                },
                "parentType": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is the type of parent object for the particular object.",
                    "type": "string"
                }
            }
        }
    }
}
