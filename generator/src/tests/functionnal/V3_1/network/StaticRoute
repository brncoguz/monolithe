{
    "apiVersion": "V3_1",
    "swaggerVersion": "1.2",
    "basePath": "/",
    "resourcePath": "/StaticRoute",
    "apis": [
        {
            "path": "/staticroutes",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all static routes. Permitted only for user with csproot/cms role",
                    "type": "StaticRoute",
                    "nickname": "getStaticRoutes",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/sharednetworkresources/{id}/staticroutes",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Create or read all static routes for a given Shared Resource Network",
                    "type": "StaticRoute",
                    "nickname": "getSHAREDNETWORKRESOURCESStaticRoutes",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Create or read all static routes for a given Shared Resource Network",
                    "type": "StaticRoute",
                    "nickname": "postSHAREDNETWORKRESOURCESStaticRoutes",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/vminterfaces/{id}/staticroutes",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all static routes for a given VM Interface",
                    "type": "StaticRoute",
                    "nickname": "getVMINTERFACESStaticRoutes",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/domains/{id}/staticroutes",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Create or read all static routes for a given domain",
                    "type": "StaticRoute",
                    "nickname": "getDOMAINSStaticRoutes",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Create or read all static routes for a given domain",
                    "type": "StaticRoute",
                    "nickname": "postDOMAINSStaticRoutes",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/staticroutes/{id}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "Read, Modify and delete a specific static route",
                    "type": "StaticRoute",
                    "nickname": "putStaticRoutes",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Read, Modify and delete a specific static route",
                    "type": "StaticRoute",
                    "nickname": "deleteStaticRoutes",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "GET",
                    "summary": "Read, Modify and delete a specific static route",
                    "type": "StaticRoute",
                    "nickname": "getStaticRoutes",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/hostinterfaces/{id}/staticroutes",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all static routes for a given Host Interface",
                    "type": "StaticRoute",
                    "nickname": "getHOSTINTERFACESStaticRoutes",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/l2domains/{id}/staticroutes",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Create or read all static routes for a given l2 domain",
                    "type": "StaticRoute",
                    "nickname": "getL2DOMAINSStaticRoutes",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Create or read all static routes for a given l2 domain",
                    "type": "StaticRoute",
                    "nickname": "postL2DOMAINSStaticRoutes",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        }
    ],
    "models": {
        "StaticRoute": {
            "id": "StaticRoute",
            "description":"Static routes allow end users to define how traffic is routed through the dVRS in addition to the routes learned by VSC through VM activation. By using static routes, end users can define for example that all traffic with a destination address towards a specific subnet must be forwarded to a specific VM attached in the dVRS and this VM could be a firewall",
            "properties": {
                "_fetchers":{
                    "type":"string",
                    "description":"internal property",
                    "enum":[
                            "EventLog"
                    ]
                },
                "address": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "IP address of the route",
                    "type": "string"
                },
                "IPType": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "IPv4 or IPv6 (only IPv4 supported in R1.0) Possible values are IPV4, IPV6, .",
                    "type": "enum",
                    "enum": [
                              "IPV6",
                              "IPV4"
                    ]
                },
                "netmask": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Netmask associated with the route",
                    "type": "string"
                },
                "nextHopIp": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "IP address of the next hop. This must be a VM attached to the dVRS",
                    "type": "string"
                },
                "creationDate": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Holds the time that this object was created.",
                    "type": "date"
                },
                "lastUpdatedBy": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the user that last modified this object.",
                    "type": "string"
                },
                "lastUpdatedDate": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Determines the time that this object was last updated.",
                    "type": "date"
                },
                "owner": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the user that has created this object.",
                    "type": "string"
                },
                "externalID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This attribute is set when an external management system is managing this object. When set, the VSD will issue a warning if the user tries to modify this object directly through the UI or the API. For example, if VMware vCloud or Openstack create a network, then this network cannot be deleted directly by a user without requiring extra confirmation. This allows integrations to separate between managed objects by external entities and directly managed objects.",
                    "type": "string"
                },
                "ID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is a unique ID for the object (UUID) that is auto-populated by the VSD and it is used in both the http URI or other objects to refer to the particular object.",
                    "type": "string"
                },
                "parentID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is the ID of the parent object.",
                    "type": "string"
                },
                "parentType": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is the type of parent object for the particular object.",
                    "type": "string"
                }
            }
        }
    }
}
