{
    "apiVersion": "V3_1",
    "swaggerVersion": "1.2",
    "basePath": "/",
    "resourcePath": "/VPort",
    "apis": [
        {
            "path": "/floatingips/{id}/vports",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all vports associated to a given floating ip",
                    "type": "VPort",
                    "nickname": "getFLOATINGIPSVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/tiers/{id}/vports",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Add a vport to a given tier and read all vports in a tier",
                    "type": "VPort",
                    "nickname": "getTIERSVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Add a vport to a given tier and read all vports in a tier",
                    "type": "VPort",
                    "nickname": "putTIERSVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/domains/{id}/vports",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all vports in a domain",
                    "type": "VPort",
                    "nickname": "getDOMAINSVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/redirectiontargets/{id}/vports",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Associate a vPort with a given vPortTag and read all vports in a vporttag",
                    "type": "VPort",
                    "nickname": "getREDIRECTIONTARGETSVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Associate a vPort with a given vPortTag and read all vports in a vporttag",
                    "type": "VPort",
                    "nickname": "putREDIRECTIONTARGETSVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/subnets/{id}/vports",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all vports in a subnet, Create vport under a subnet",
                    "type": "VPort",
                    "nickname": "getSUBNETSVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Read all vports in a subnet, Create vport under a subnet",
                    "type": "VPort",
                    "nickname": "postSUBNETSVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/vrss/{id}/vports",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all VPorts associated to a specific VRS",
                    "type": "VPort",
                    "nickname": "getVRSSVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/l2domains/{id}/vports",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all vports in a l2domain",
                    "type": "VPort",
                    "nickname": "getL2DOMAINSVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Read all vports in a l2domain",
                    "type": "VPort",
                    "nickname": "postL2DOMAINSVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/multinicvports/{id}/vports",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all Vports associated to a specific Multi NIC Vport",
                    "type": "VPort",
                    "nickname": "getMULTINICVPORTSVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/policygroups/{id}/vports",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Add a vport to a given policy group and read all vports in a policy group",
                    "type": "VPort",
                    "nickname": "getPOLICYGROUPSVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Add a vport to a given policy group and read all vports in a policy group",
                    "type": "VPort",
                    "nickname": "putPOLICYGROUPSVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/vports/{id}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "Read, Modify or Delete a given Vport",
                    "type": "VPort",
                    "nickname": "putVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Read, Modify or Delete a given Vport",
                    "type": "VPort",
                    "nickname": "deleteVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "GET",
                    "summary": "Read, Modify or Delete a given Vport",
                    "type": "VPort",
                    "nickname": "getVPorts",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        }
    ],
    "models": {
        "VPort": {
            "id": "VPort",
            "description":"VPorts are a new level in the domain hierarchy, intended to provide more granular configuration than at subnet, and also support a split workflow, where the vPort is configured and associated with a VM port (or gateway port) before the port exists on the hypervisor or gateway",
            "properties": {
                "_fetchers":{
                    "type":"string",
                    "description":"internal property",
                    "enum":[
                            "BridgeInterface",
                            "Statistics",
                            "HostInterface",
                            "VMInterface",
                            "VRS",
                            "RedirectionTarget",
                            "VPortMirror",
                            "PolicyGroup",
                            "VirtualMachine",
                            "StatisticsPolicy",
                            "Alarm",
                            "QosPrimitive",
                            "TCA",
                            "EventLog"
                    ]
                },
                "active": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Indicates if this vport is up or down",
                    "type": "boolean"
                },
                "addressSpoofing": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Indicates if address spoofing is ENABLED/DISABLED/INHERITED for this vport Possible values are INHERITED, ENABLED, DISABLED, .",
                    "type": "enum",
                    "enum": [
                              "ENABLED",
                              "INHERITED",
                              "DISABLED"
                    ]
                },
                "VLANID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "associated Vlan of this vport - applicable for type host/bridge",
                    "type": "string"
                },
                "description": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Description for this vport",
                    "type": "string"
                },
                "domainID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "ID the Domain associated with the VPort",
                    "type": "string"
                },
                "multicast": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "multicast is enum that indicates multicast policy on Vport. Possible values are ENABLED ,DISABLED  and INHERITED Possible values are INHERITED, ENABLED, DISABLED, .",
                    "type": "enum",
                    "enum": [
                              "ENABLED",
                              "INHERITED",
                              "DISABLED"
                    ]
                },
                "associatedFloatingIPID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Id of Floating IP address associated to this vport",
                    "type": "string"
                },
                "hasAttachedInterfaces": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Indicates that this vport has attached interfaces",
                    "type": "boolean"
                },
                "associatedMulticastChannelMapID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "The ID of the Multi Cast Channel Map  this Vport is associated with. This has to be set when  enableMultiCast is set to ENABLED",
                    "type": "string"
                },
                "multiNICVPortID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "ID of the Multi NIC VPort associated with the VPort",
                    "type": "string"
                },
                "name": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Name of the vport. Valid characters are alphabets, numbers, space and hyphen( - ).",
                    "type": "string"
                },
                "operationalState": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Operational State of the VPort - RUNNING/SHUTDOWN Possible values are INIT, UP, DOWN, .",
                    "type": "enum",
                    "enum": [
                              "DOWN",
                              "UP",
                              "INIT"
                    ]
                },
                "systemType": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Indicates what system it is - SOFTWARE/HARDWARE_VTEP/HARDWARE/ (possible values)  Possible values are HARDWARE, SOFTWARE, HARDWARE_VTEP, NUAGE_1, NUAGE_2, NUAGE_VRSG, .",
                    "type": "enum",
                    "enum": [
                              "HARDWARE",
                              "NUAGE_VRSG",
                              "NUAGE_2",
                              "NUAGE_1",
                              "HARDWARE_VTEP",
                              "SOFTWARE"
                    ]
                },
                "type": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Type of vport - possible values VM/HOST/BRIDGE Possible values are VM, HOST, BRIDGE, .",
                    "type": "enum",
                    "enum": [
                              "HOST",
                              "BRIDGE",
                              "VM"
                    ]
                },
                "zoneID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "ID the Zone associated with the VPort",
                    "type": "string"
                },
                "creationDate": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Holds the time that this object was created.",
                    "type": "date"
                },
                "lastUpdatedBy": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the user that last modified this object.",
                    "type": "string"
                },
                "lastUpdatedDate": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Determines the time that this object was last updated.",
                    "type": "date"
                },
                "owner": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the user that has created this object.",
                    "type": "string"
                },
                "externalID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This attribute is set when an external management system is managing this object. When set, the VSD will issue a warning if the user tries to modify this object directly through the UI or the API. For example, if VMware vCloud or Openstack create a network, then this network cannot be deleted directly by a user without requiring extra confirmation. This allows integrations to separate between managed objects by external entities and directly managed objects.",
                    "type": "string"
                },
                "ID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is a unique ID for the object (UUID) that is auto-populated by the VSD and it is used in both the http URI or other objects to refer to the particular object.",
                    "type": "string"
                },
                "parentID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is the ID of the parent object.",
                    "type": "string"
                },
                "parentType": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is the type of parent object for the particular object.",
                    "type": "string"
                }
            }
        }
    }
}
