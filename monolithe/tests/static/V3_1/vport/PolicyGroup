{
    "apiVersion": "V3_1",
    "swaggerVersion": "1.2",
    "basePath": "/",
    "resourcePath": "/PolicyGroup",
    "apis": [
        {
            "path": "/hostinterfaces/{id}/policygroups",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all policygroups for a given Host Interface",
                    "type": "PolicyGroup",
                    "nickname": "getHOSTINTERFACESPolicyGroups",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/vports/{id}/policygroups",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Associate a policy group to a given vport and read all policy groups in a vport",
                    "type": "PolicyGroup",
                    "nickname": "getVPORTSPolicyGroups",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Associate a policy group to a given vport and read all policy groups in a vport",
                    "type": "PolicyGroup",
                    "nickname": "putVPORTSPolicyGroups",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/policygroups",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all policy groups. Permitted only for user with csproot/cms role",
                    "type": "PolicyGroup",
                    "nickname": "getPolicyGroups",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/policygroups/{id}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "Read, Modify or Delete a policy group.",
                    "type": "PolicyGroup",
                    "nickname": "putPolicyGroups",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Read, Modify or Delete a policy group.",
                    "type": "PolicyGroup",
                    "nickname": "deletePolicyGroups",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "GET",
                    "summary": "Read, Modify or Delete a policy group.",
                    "type": "PolicyGroup",
                    "nickname": "getPolicyGroups",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/bridgeinterfaces/{id}/policygroups",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all policygroups for a given Bridge Interface",
                    "type": "PolicyGroup",
                    "nickname": "getBRIDGEINTERFACESPolicyGroups",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/vminterfaces/{id}/policygroups",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all policygroups for a given VM Interface",
                    "type": "PolicyGroup",
                    "nickname": "getVMINTERFACESPolicyGroups",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/l2domains/{id}/policygroups",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Create or read all policy group in a l2domain.",
                    "type": "PolicyGroup",
                    "nickname": "getL2DOMAINSPolicyGroups",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Create or read all policy group in a l2domain.",
                    "type": "PolicyGroup",
                    "nickname": "postL2DOMAINSPolicyGroups",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/domains/{id}/policygroups",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Create or read all policy group in a domain.",
                    "type": "PolicyGroup",
                    "nickname": "getDOMAINSPolicyGroups",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Create or read all policy group in a domain.",
                    "type": "PolicyGroup",
                    "nickname": "postDOMAINSPolicyGroups",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        }
    ],
    "models": {
        "PolicyGroup": {
            "id": "PolicyGroup",
            "description":"PolicyGroup is group of policys on which a user can policies like ACL, QoS etc.",
            "properties": {
                "_fetchers":{
                    "type":"string",
                    "description":"internal property",
                    "enum":[
                            "VPort",
                            "EventLog"
                    ]
                },
                "description": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Describes this policy group",
                    "type": "string"
                },
                "EVPNCommunityTag": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Assigned by VSD. An extended community or other similar BGP attribute to the specific EVPN / IP-VPN NLRI where the VM or network macro is being advertised.",
                    "type": "string"
                },
                "name": {
                    "required": "true",
                    "uniqueItems": false,
                    "description": "Name of the policy group",
                    "type": "string"
                },
                "templateID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Determines which template ID this policy group belongs to.",
                    "type": "string"
                },
                "type": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Type of policy group - possible values SOFTWARE/HARDWARE Possible values are SOFTWARE, HARDWARE, .",
                    "type": "enum",
                    "enum": [
                              "HARDWARE",
                              "SOFTWARE"
                    ]
                },
                "creationDate": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Holds the time that this object was created.",
                    "type": "date"
                },
                "lastUpdatedBy": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the user that last modified this object.",
                    "type": "string"
                },
                "lastUpdatedDate": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Determines the time that this object was last updated.",
                    "type": "date"
                },
                "owner": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the user that has created this object.",
                    "type": "string"
                },
                "externalID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This attribute is set when an external management system is managing this object. When set, the VSD will issue a warning if the user tries to modify this object directly through the UI or the API. For example, if VMware vCloud or Openstack create a network, then this network cannot be deleted directly by a user without requiring extra confirmation. This allows integrations to separate between managed objects by external entities and directly managed objects.",
                    "type": "string"
                },
                "ID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is a unique ID for the object (UUID) that is auto-populated by the VSD and it is used in both the http URI or other objects to refer to the particular object.",
                    "type": "string"
                },
                "parentID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is the ID of the parent object.",
                    "type": "string"
                },
                "parentType": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is the type of parent object for the particular object.",
                    "type": "string"
                }
            }
        }
    }
}
