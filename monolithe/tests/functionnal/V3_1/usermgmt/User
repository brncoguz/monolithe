{
    "apiVersion": "V3_1",
    "swaggerVersion": "1.2",
    "basePath": "/",
    "resourcePath": "/User",
    "apis": [
        {
            "path": "/enterprises/{id}/users",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Create or read all users associated to an enterprise",
                    "type": "User",
                    "nickname": "getENTERPRISESUsers",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Create or read all users associated to an enterprise",
                    "type": "User",
                    "nickname": "postENTERPRISESUsers",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/users/{id}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "Read, modify and delete a specific user",
                    "type": "User",
                    "nickname": "putUsers",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Read, modify and delete a specific user",
                    "type": "User",
                    "nickname": "deleteUsers",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "GET",
                    "summary": "Read an enterprise",
                    "type": "User",
                    "nickname": "getUsers",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/groups/{id}/users",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all API can be used to read all users under a specific group, Modify API can be used to add or delete users in group. In case of modify(PUT), input JSON body should be an array of ID of the user",
                    "type": "User",
                    "nickname": "getGROUPSUsers",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Read all API can be used to read all users under a specific group, Modify API can be used to add or delete users in group. In case of modify(PUT), input JSON body should be an array of ID of the user",
                    "type": "User",
                    "nickname": "putGROUPSUsers",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        }
    ],
    "models": {
        "User": {
            "id": "User",
            "description":"Object that identifies the user functions",
            "properties": {
                "_fetchers":{
                    "type":"string",
                    "description":"internal property",
                    "enum":[
                            "Application",
                            "EventLog",
                            "VirtualMachine",
                            "Group"
                    ]
                },
                "avatarData": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "URL to the avatar data associated with the enterprise. If the avatarType is URL then value of avatarData should an URL of the image. If the avatarType BASE64 then avatarData should be BASE64 encoded value of the image",
                    "type": "string"
                },
                "avatarType": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Avatar type - URL or BASE64 Possible values are URL, BASE64, COMPUTEDURL, .",
                    "type": "enum",
                    "enum": [
                              "COMPUTEDURL",
                              "BASE64",
                              "URL"
                    ]
                },
                "email": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Email address of the user",
                    "type": "string"
                },
                "firstName": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "First name of the user",
                    "type": "string"
                },
                "lastName": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Last name of the user",
                    "type": "string"
                },
                "mobileNumber": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Mobile Number of the user",
                    "type": "string"
                },
                "password": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "User password stored as a hash (SHA-1 encrpted)",
                    "type": "string"
                },
                "userName": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Unique Username of the user. Valid characters are alphabets, numbers and hyphen( - ).",
                    "type": "string"
                },
                "creationDate": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Holds the time that this object was created.",
                    "type": "date"
                },
                "lastUpdatedBy": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the user that last modified this object.",
                    "type": "string"
                },
                "lastUpdatedDate": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Determines the time that this object was last updated.",
                    "type": "date"
                },
                "owner": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the user that has created this object.",
                    "type": "string"
                },
                "externalID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This attribute is set when an external management system is managing this object. When set, the VSD will issue a warning if the user tries to modify this object directly through the UI or the API. For example, if VMware vCloud or Openstack create a network, then this network cannot be deleted directly by a user without requiring extra confirmation. This allows integrations to separate between managed objects by external entities and directly managed objects.",
                    "type": "string"
                },
                "ID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is a unique ID for the object (UUID) that is auto-populated by the VSD and it is used in both the http URI or other objects to refer to the particular object.",
                    "type": "string"
                },
                "parentID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is the ID of the parent object.",
                    "type": "string"
                },
                "parentType": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is the type of parent object for the particular object.",
                    "type": "string"
                }
            }
        }
    }
}
