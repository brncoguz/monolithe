# # -*- coding: utf-8 -*-
#
# import os
# import shutil
#
# from unittest import TestCase
# from monolithe import Command
#
# OUTPUT_PATH = './tmp'
#
#
# def get_valid_path():
#     """ Returns swagger path """
#
#     return '%s/monolithe/tests/static/V3_1' % os.getcwd()
#
#
# def get_static_autogenerates_path(entity):
#     """ Returns swagger path """
#
#     return '%s/monolithe/tests/static/vsdk/autogenerates/%s.py' % (os.getcwd(), entity)
#
# def get_tmp_autogenerates_path(entity):
#     """ Returns swagger path """
#
#     return '%s/3.1/vsdk/autogenerates/%s.py' % (OUTPUT_PATH, entity)
#
#
#
# def read_file(path):
#     """ Read file at path and returns its content """
#     file = open(path, 'r')
#     content = file.read()
#     file.close()
#
#     return content
#
#
# class VSDKOutputTests(TestCase):
#     """ Tests for SwaggerParser using file option
#
#     """
#
#     def assert_autogenerate_output_is_valid(self, entity, message):
#
#         valid_content = read_file(get_static_autogenerates_path(entity))
#         content = read_file(get_tmp_autogenerates_path(entity))
#
#         self.assertEquals(valid_content, content, message)
#
#     @classmethod
#     def setUpClass(cls):
#         """ Set up context
#
#         """
#         os.makedirs(OUTPUT_PATH)
#         Command.generate_sdk(vsdurl=None, path=get_valid_path(), apiversion=None, revision=None, git_repository=None, output_path=OUTPUT_PATH)
#
#     @classmethod
#     def tearDownClass(cls):
#         """ Clean generated tests
#
#         """
#         shutil.rmtree(OUTPUT_PATH)
#
#
#     def test_validate_autogenerates(self):
#         """ Validates autogenerated files
#
#         """
#
#         self.assert_autogenerate_output_is_valid('nudomain', 'NUDomain is not correct')
#         self.assert_autogenerate_output_is_valid('nuenterprise', 'NUEnterprise is not correct')
#         self.assert_autogenerate_output_is_valid('nurestuser', 'NURESTUser is not correct')
