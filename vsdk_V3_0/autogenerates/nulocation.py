# -*- coding: utf-8 -*-
"""

NULocation
This file has been autogenerated by Swagger  and should not be modified.

Author Christophe Serafin <christophe.serafin@alcatel-lucent.com>

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 3.0 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

"""

from bambou import NURESTObject



class NULocation(NURESTObject):
    """ Represents a Location object in Nuage VSD solution
        IMPORTANT: Do not override this object.
    """

    def __init__(self, **kwargs):
        """ Initialize a NULocation instance """

        super(NULocation, self).__init__()

        # Read/Write Attributes
        self.address = None  #  Formatted address including property number, street name, suite or office number, ... - int
        self.country = None  #  Country - int
        self.latitude = None  #  Latitude in decimal format. - float
        self.locality = None  #  Locality/City/County - int
        self.longitude = None  #  Longitude in decimal format. - float
        self.state = None  #  State/Province/Region - int
        self.time_zone_id = None  #  Time zone in which the Gateway is located.  This can be in the form of a UTC/GMT offset, continent/city location, or country/region.  The available time zones can be found in /usr/share/zoneinfo on a Linux machine or retrieved with TimeZone.getAvailableIDs() in Java.  Refer to the IANA (Internet Assigned Numbers Authority) for a list of time zones.  URL :  http://www.iana.org/time-zones  Default value is UTC (translating to Etc/Zulu) - int
        
        self.expose_attribute(local_name=u"address", remote_name=u"address", attribute_type=int)
        self.expose_attribute(local_name=u"country", remote_name=u"country", attribute_type=int)
        self.expose_attribute(local_name=u"latitude", remote_name=u"latitude", attribute_type=float)
        self.expose_attribute(local_name=u"locality", remote_name=u"locality", attribute_type=int)
        self.expose_attribute(local_name=u"longitude", remote_name=u"longitude", attribute_type=float)
        self.expose_attribute(local_name=u"state", remote_name=u"state", attribute_type=int)
        self.expose_attribute(local_name=u"time_zone_id", remote_name=u"timeZoneID", attribute_type=int)
        
        # Fetchers
        for key, value in kwargs.iteritems():
            if hasattr(self, key):
                setattr(self, key, value)



    @classmethod
    def get_remote_name(cls):
        """ Remote name that will be used to generates URI """

        return u"location"


