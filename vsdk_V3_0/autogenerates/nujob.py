# -*- coding: utf-8 -*-
"""

NUJob
This file has been autogenerated by Swagger  and should not be modified.

Author Christophe Serafin <christophe.serafin@alcatel-lucent.com>

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 3.0 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

"""

from bambou import NURESTObject



class NUJob(NURESTObject):
    """ Represents a Job object in Nuage VSD solution
        IMPORTANT: Do not override this object.
    """

    def __init__(self, **kwargs):
        """ Initialize a NUJob instance """

        super(NUJob, self).__init__()

        # Read/Write Attributes
        self.assoc_entity_type = None  #  Entity with which this job is associated - int
        self.command = None  #  Name of the command, possible values are GATEWAY_AUDIT, RELOAD, EXPORT, IMPORT - int
        self.parameters = None  #  Additional arguments required for the specific command. Differs based on types of command. - int
        self.progress = None  #  Indicates the progress of the job as a faction. eg : 0.5 means 50% done. - float
        self.result = None  #  Results from the execution of the job - int
        self.status = None  #  Current status of the job, possible values are RUNNING, FAILED, SUCCESS - int
        
        self.expose_attribute(local_name=u"assoc_entity_type", remote_name=u"assocEntityType", attribute_type=int)
        self.expose_attribute(local_name=u"command", remote_name=u"command", attribute_type=int)
        self.expose_attribute(local_name=u"parameters", remote_name=u"parameters", attribute_type=int)
        self.expose_attribute(local_name=u"progress", remote_name=u"progress", attribute_type=float)
        self.expose_attribute(local_name=u"result", remote_name=u"result", attribute_type=int)
        self.expose_attribute(local_name=u"status", remote_name=u"status", attribute_type=int)
        
        # Fetchers
        for key, value in kwargs.iteritems():
            if hasattr(self, key):
                setattr(self, key, value)



    @classmethod
    def get_remote_name(cls):
        """ Remote name that will be used to generates URI """

        return u"job"


