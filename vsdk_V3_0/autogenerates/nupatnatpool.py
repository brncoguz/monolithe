# -*- coding: utf-8 -*-

"""
NUPATNATPool
Represents PAT NAT Pool object.

This file has been autogenerated and should not be modified.
Author Christophe Serafin <christophe.serafin@alcatel-lucent.com>

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 3.0 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

"""

from ..fetchers import NUEnterprisePermissionsFetcher
from ..fetchers import NUNATMapEntriesFetcher
from bambou import NURESTObject


class NUPATNATPool(NURESTObject):
    """ Represents a PATNATPool object

        IMPORTANT: This file has been autogenerated. Do not override it !

    """

    def __init__(self, **kwargs):
        """ Initializes a PATNATPool instance

        """
        super(NUPATNATPool, self).__init__()

        # Read/Write Attributes
        
        self._associated_gateway_id = str()
        self._description = str()
        self._address_range = str()
        self._permitted_action = str()
        self._default_patip = str()
        self._name = str()
        
        self.expose_attribute(local_name=u"associated_gateway_id", remote_name=u"associatedGatewayID", attribute_type=str)
        self.expose_attribute(local_name=u"description", remote_name=u"description", attribute_type=str)
        self.expose_attribute(local_name=u"address_range", remote_name=u"addressRange", attribute_type=str)
        self.expose_attribute(local_name=u"permitted_action", remote_name=u"permittedAction", attribute_type=str, choices=[u'EXTEND', u'INSTANTIATE', u'USE', u'READ', u'ALL'])
        self.expose_attribute(local_name=u"default_patip", remote_name=u"defaultPATIP", attribute_type=str)
        self.expose_attribute(local_name=u"name", remote_name=u"name", attribute_type=str)
        
        # Fetchers
        
        self.enterprisepermissions = []
        self.enterprisepermissions_fetcher = NUEnterprisePermissionsFetcher.fetcher_with_entity(entity=self, local_name=u"enterprisepermissions")
        
        self.natmapentries = []
        self.natmapentries_fetcher = NUNATMapEntriesFetcher.fetcher_with_entity(entity=self, local_name=u"natmapentries")
        
        for key, value in kwargs.iteritems():
            if hasattr(self, key):
                setattr(self, key, value)

    # Properties
    
    def _get_associated_gateway_id(self):
        """ Get attribute associated_gateway_id

            Gateway ID to which this PATNATPool belongs to. This is a read only and cannot be modified.

        """
        return self._associated_gateway_id

    def _set_associated_gateway_id(self, value):
        """ Set attribute associated_gateway_id

            Gateway ID to which this PATNATPool belongs to. This is a read only and cannot be modified.

        """
        self._associated_gateway_id = value

    associated_gateway_id = property(_get_associated_gateway_id, _set_associated_gateway_id)
    
    def _get_description(self):
        """ Get attribute description

            A description of the PATNATPool

        """
        return self._description

    def _set_description(self, value):
        """ Set attribute description

            A description of the PATNATPool

        """
        self._description = value

    description = property(_get_description, _set_description)
    
    def _get_address_range(self):
        """ Get attribute address_range

            Pool of IP Address that is available for use ex : 130.12.0.0/16

        """
        return self._address_range

    def _set_address_range(self, value):
        """ Set attribute address_range

            Pool of IP Address that is available for use ex : 130.12.0.0/16

        """
        self._address_range = value

    address_range = property(_get_address_range, _set_address_range)
    
    def _get_permitted_action(self):
        """ Get attribute permitted_action

            The permitted  action to USE/EXTEND  this Gateway Possible values are USE, READ, ALL, INSTANTIATE, EXTEND, .

        """
        return self._permitted_action

    def _set_permitted_action(self, value):
        """ Set attribute permitted_action

            The permitted  action to USE/EXTEND  this Gateway Possible values are USE, READ, ALL, INSTANTIATE, EXTEND, .

        """
        self._permitted_action = value

    permitted_action = property(_get_permitted_action, _set_permitted_action)
    
    def _get_default_patip(self):
        """ Get attribute default_patip

            Default PAT IP Address, must belong to the pool above

        """
        return self._default_patip

    def _set_default_patip(self, value):
        """ Set attribute default_patip

            Default PAT IP Address, must belong to the pool above

        """
        self._default_patip = value

    default_patip = property(_get_default_patip, _set_default_patip)
    
    def _get_name(self):
        """ Get attribute name

            Name of the PATNATPool

        """
        return self._name

    def _set_name(self, value):
        """ Set attribute name

            Name of the PATNATPool

        """
        self._name = value

    name = property(_get_name, _set_name)
    
    # Methods

    @classmethod
    def get_remote_name(cls):
        """ Remote name that will be used to generates URI

        """
        return u"patnatpool"
