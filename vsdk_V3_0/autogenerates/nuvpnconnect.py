# -*- coding: utf-8 -*-

"""
NUVPNConnect
This is the definition of a VPN Connect which holds the PE service assocaition with a DOMAIN

This file has been autogenerated and should not be modified.
Author Christophe Serafin <christophe.serafin@alcatel-lucent.com>

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 3.0 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

"""

from bambou import NURESTObject


class NUVPNConnect(NURESTObject):
    """ Represents a VPNConnect object

        IMPORTANT: This file has been autogenerated. Do not override it !

    """

    def __init__(self, **kwargs):
        """ Initializes a VPNConnect instance

        """
        super(NUVPNConnect, self).__init__()

        # Read/Write Attributes
        
        self._associated_wan_service_id = str()
        self._description = str()
        self._name = str()
        
        self.expose_attribute(local_name=u"associated_wan_service_id", remote_name=u"associatedWANServiceID", attribute_type=str)
        self.expose_attribute(local_name=u"description", remote_name=u"description", attribute_type=str)
        self.expose_attribute(local_name=u"name", remote_name=u"name", attribute_type=str)
        
        for key, value in kwargs.iteritems():
            if hasattr(self, key):
                setattr(self, key, value)

    # Properties
    
    def _get_associated_wan_service_id(self):
        """ Get attribute associated_wan_service_id

            Assosciated WAN Service

        """
        return self._associated_wan_service_id

    def _set_associated_wan_service_id(self, value):
        """ Set attribute associated_wan_service_id

            Assosciated WAN Service

        """
        self._associated_wan_service_id = value

    associated_wan_service_id = property(_get_associated_wan_service_id, _set_associated_wan_service_id)
    
    def _get_description(self):
        """ Get attribute description

            A description of the VPNConnect

        """
        return self._description

    def _set_description(self, value):
        """ Set attribute description

            A description of the VPNConnect

        """
        self._description = value

    description = property(_get_description, _set_description)
    
    def _get_name(self):
        """ Get attribute name

            Name of the VPNConnect

        """
        return self._name

    def _set_name(self, value):
        """ Set attribute name

            Name of the VPNConnect

        """
        self._name = value

    name = property(_get_name, _set_name)
    
    # Methods

    @classmethod
    def get_remote_name(cls):
        """ Remote name that will be used to generates URI

        """
        return u"vpnconnection"
