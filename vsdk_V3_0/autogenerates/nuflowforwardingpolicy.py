# -*- coding: utf-8 -*-

"""
NUFlowForwardingPolicy
The redirect policy on the flow.

This file has been autogenerated and should not be modified.
Author Christophe Serafin <christophe.serafin@alcatel-lucent.com>

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 3.0 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

"""

from bambou import NURESTObject


class NUFlowForwardingPolicy(NURESTObject):
    """ Represents a FlowForwardingPolicy object

        IMPORTANT: This file has been autogenerated. Do not override it !

    """

    def __init__(self, **kwargs):
        """ Initializes a FlowForwardingPolicy instance

        """
        super(NUFlowForwardingPolicy, self).__init__()

        # Read/Write Attributes
        
        self._associated_network_object_type = str()
        self._redirect_target_id = str()
        self._associated_application_service_id = str()
        self._associated_network_object_id = str()
        self._destination_address_overwrite = str()
        self._flow_id = str()
        self._type = str()
        self._source_address_overwrite = str()
        
        self.expose_attribute(local_name=u"associated_network_object_type", remote_name=u"associatedNetworkObjectType", attribute_type=str, choices=[])
        self.expose_attribute(local_name=u"redirect_target_id", remote_name=u"redirectTargetID", attribute_type=str)
        self.expose_attribute(local_name=u"associated_application_service_id", remote_name=u"associatedApplicationServiceID", attribute_type=str)
        self.expose_attribute(local_name=u"associated_network_object_id", remote_name=u"associatedNetworkObjectID", attribute_type=str)
        self.expose_attribute(local_name=u"destination_address_overwrite", remote_name=u"destinationAddressOverwrite", attribute_type=str)
        self.expose_attribute(local_name=u"flow_id", remote_name=u"flowID", attribute_type=str)
        self.expose_attribute(local_name=u"type", remote_name=u"type", attribute_type=str)
        self.expose_attribute(local_name=u"source_address_overwrite", remote_name=u"sourceAddressOverwrite", attribute_type=str)
        
        for key, value in kwargs.iteritems():
            if hasattr(self, key):
                setattr(self, key, value)

    # Properties
    
    def _get_associated_network_object_type(self):
        """ Get attribute associated_network_object_type

            The associated network object type. Refer to API section for supported types.

        """
        return self._associated_network_object_type

    def _set_associated_network_object_type(self, value):
        """ Set attribute associated_network_object_type

            The associated network object type. Refer to API section for supported types.

        """
        self._associated_network_object_type = value

    associated_network_object_type = property(_get_associated_network_object_type, _set_associated_network_object_type)
    
    def _get_redirect_target_id(self):
        """ Get attribute redirect_target_id

            The associated service id.

        """
        return self._redirect_target_id

    def _set_redirect_target_id(self, value):
        """ Set attribute redirect_target_id

            The associated service id.

        """
        self._redirect_target_id = value

    redirect_target_id = property(_get_redirect_target_id, _set_redirect_target_id)
    
    def _get_associated_application_service_id(self):
        """ Get attribute associated_application_service_id

            The associated service id.

        """
        return self._associated_application_service_id

    def _set_associated_application_service_id(self, value):
        """ Set attribute associated_application_service_id

            The associated service id.

        """
        self._associated_application_service_id = value

    associated_application_service_id = property(_get_associated_application_service_id, _set_associated_application_service_id)
    
    def _get_associated_network_object_id(self):
        """ Get attribute associated_network_object_id

            The associated network object id.

        """
        return self._associated_network_object_id

    def _set_associated_network_object_id(self, value):
        """ Set attribute associated_network_object_id

            The associated network object id.

        """
        self._associated_network_object_id = value

    associated_network_object_id = property(_get_associated_network_object_id, _set_associated_network_object_id)
    
    def _get_destination_address_overwrite(self):
        """ Get attribute destination_address_overwrite

            The destination address overwrite.

        """
        return self._destination_address_overwrite

    def _set_destination_address_overwrite(self, value):
        """ Set attribute destination_address_overwrite

            The destination address overwrite.

        """
        self._destination_address_overwrite = value

    destination_address_overwrite = property(_get_destination_address_overwrite, _set_destination_address_overwrite)
    
    def _get_flow_id(self):
        """ Get attribute flow_id

            The associated service id.

        """
        return self._flow_id

    def _set_flow_id(self, value):
        """ Set attribute flow_id

            The associated service id.

        """
        self._flow_id = value

    flow_id = property(_get_flow_id, _set_flow_id)
    
    def _get_type(self):
        """ Get attribute type

            The redirect type.

        """
        return self._type

    def _set_type(self, value):
        """ Set attribute type

            The redirect type.

        """
        self._type = value

    type = property(_get_type, _set_type)
    
    def _get_source_address_overwrite(self):
        """ Get attribute source_address_overwrite

            The source address overwrite.

        """
        return self._source_address_overwrite

    def _set_source_address_overwrite(self, value):
        """ Set attribute source_address_overwrite

            The source address overwrite.

        """
        self._source_address_overwrite = value

    source_address_overwrite = property(_get_source_address_overwrite, _set_source_address_overwrite)
    
    # Methods

    @classmethod
    def get_remote_name(cls):
        """ Remote name that will be used to generates URI

        """
        return u"flowforwardingpolicy"
