# -*- coding: utf-8 -*-
"""

NUSystemConfig
This file has been autogenerated by Swagger  and should not be modified.

Author Christophe Serafin <christophe.serafin@alcatel-lucent.com>

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 3.0 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

"""

from bambou import NURESTObject



class NUSystemConfig(NURESTObject):
    """ Represents a SystemConfig object in Nuage VSD solution
        IMPORTANT: Do not override this object.
    """

    def __init__(self, **kwargs):
        """ Initialize a NUSystemConfig instance """

        super(NUSystemConfig, self).__init__()

        # Read/Write Attributes
        self.acl_allow_origin = None  #  Defines the domains allowed for access control list. - int
        self.api_key_renewal_interval = None  #  Defines the interval, before the expiry time, that can used to renew the apiKey by making me API call. Minimum value is 1 min and maximum is 5 min. - long
        self.api_key_validity = None  #  Defines the apiKey validity duration in seconds. Default is 24 hours and minimum value is 10 min. - long
        self.as_number = None  #   Autonomous System Number,Used for RT/RD auto-generation - long
        self.ad_gateway_purge_time = None  #  Timers in sec for undefined vms to be deleted(min =7200, max = 86400). - int
        self.avatar_base_path = None  #  Defines location where image files needs to be copied. Above URL should be configured to read the file from this location. - int
        self.avatar_base_url = None  #  Defines the url to read the avatar image files - int
        self.offset_customer_id = None  #  Customer id offset, this value has to be set before jboss starts , after that any change of value is ignored (minexclusive = 0, max = 20000) system wide value - long
        self.customer_id_upper_limit = None  #  Customer id upper limit, system wide value - long
        self.customer_key = None  #  Customer key associated with the licese - int
        self.dhcp_option_size = None  #  Defines total DHCP options that can be set on a domain. - int
        self.domain_tunnel_type = None  #  Default Domain Tunnel Type .Possible values are VXLAN,GRE - int
        self.ejbca_ncpe_certificate_profile = None  #  EJBCA NSG Certificate Profile - int
        self.ejbca_ncpe_end_entity_profile = None  #  EJBCA NSG End Entity Profile - int
        self.ejbca_vsp_root_ca = None  #  EJBCA VSP Root CA - int
        self.esi_id = None  #  ESI ID offset - int
        self.event_log_cleanup_interval = None  #  Cleanup task run interval in seconds (Min: every hour, Max: every day) - long
        self.event_log_entry_max_age = None  #  Maximum age in days for cleanup of the eventlog entries (Min: 1 day, Max: 6 months). On every periodic interval run, any eventlog entries older than the maxage will be deleted. - int
        self.event_processor_interval = None  #  Defines time interval in milliseconds when events collected for a client should be processed. Minimum value is 250ms. - long
        self.event_processor_max_events_count = None  #  Defines the maximum number of events to be collected in case of events burst. Value should be between 100 to 500. - int
        self.event_processor_timeout = None  #  Defines the maximum time period in milliseconds for the Rest server to wait before sending the events from the system. Value should be between 25000ms to 100000ms. - long
        self.evpnbgp_community_tag_as_number = None  #   Autonomous System Number,Used for EVPNBGPCommunityTag auto-generation - long
        self.evpnbgp_community_tag_lower_limit = None  #  EVPNBGPCommunityTag lower limit - long
        self.evpnbgp_community_tag_upper_limit = None  #  EVPNBGPCommunityTag upper limit - long
        self.inactive_timeout = None  #  Defines the inactive timeout for the client. If the client is inactive for more than timeout, server clears off all the cache/information regarding the client. This value should be greater than event processor max timeout - long
        self.ldap_trust_store_certifcate = None  #  Location of the truststore which is need to store LDAP server certificates. Default is cacerts located in java.home/lib/security/cacerts. Uncomment below setting if you need to use a different file - int
        self.ldap_trust_store_password = None  #  Password to access the truststore. Uncomment below line to change its value. - int
        self.lru_cache_size_per_subnet = None  #  LRU Map size per subnet ( to hold the deleted vm's ip addresses min =32, max 256). - int
        self.alarms_max_per_object = None  #  Maximum alarms per object for example max distinct alarms for specific VM (min = 5, max =20) - int
        self.page_max_size = None  #  Defines upper bound for the page size (allowed max=1000). Configured or input page size should be less than this max page size. - int
        self.max_response = None  #  Defines maximum results returned by the REST call (allowed max=5000). - int
        self.ncpe_bootstrap_endpoint = None  #  NSG Bootstrap Endpoint - int
        self.ncpe_config_endpoint = None  #  NSG Config Endpoint - int
        self.ncpe_local_ui_url = None  #  NSG Local UI URL - will be redirected on NSG to localhost - int
        self.page_size = None  #  Defines the page size for the results returned by the REST call. - int
        self.post_processor_threads_count = None  #  Post processor thread count. - int
        self.reflexive_acl_timeout = None  #  Defines the timeout in seconds for reflexive ACLs. This value applies for both TCP and UDP connections. Default value is 180 seconds and the timeout should be between 10 to 86400 seconds. - long
        self.rd_lower_limit = None  #  route distinguisher lower limit - long
        self.rd_public_network_lower_limit = None  #  route distinguisher public network lower limit - long
        self.rd_public_network_upper_limit = None  #  route distinguisher public network upper limit - long
        self.rd_upper_limit = None  #  route distinguisher upper limit - long
        self.rt_lower_limit = None  #  route target lower limit - long
        self.rt_public_network_lower_limit = None  #  route target public network lower limit - long
        self.rt_public_network_upper_limit = None  #  route target public network upper limit - long
        self.rt_upper_limit = None  #  route target upper limit - long
        self.offset_service_id = None  #  Service id offset, this value has to be set before jboss starts during install time, after that any change of value is ignored (minexclusive = 0, max = 40000) system wide value - long
        self.service_id_upper_limit = None  #  Service id upper limit system wide value - long
        self.stack_trace_enabled = None  #  True to enable stacktrace in the REST call. - int
        self.stats_collector_address = None  #  Specify the ip address(es) of the stats collector. - int
        self.stats_collector_port = None  #  Specify the port number(s) of the stats collector. - int
        self.stats_max_data_points = None  #  Specifies the maximum number of data points to support. - int
        self.stats_min_duration = None  #  Default minimum duration for statistics to be displayed in UI is 30 days in seconds. - long
        self.stats_number_of_data_points = None  #  Specifies number of data points. - int
        self.subnet_resync_interval = None  #  After resync on a subnet , another resync on the same subnet is allowed based on the below value subnet resync complete wait time in min (min = 5, max =15) - int
        self.subnet_resync_outstanding_interval = None  #  Outstanding subnet resync interval (in secs). (min = 10, max = 50) system wide value - int
        self.sysmon_cleanup_task_interval = None  #  Sysmon cleanup task run interval in seconds (Min: 10 secs,  Max: 3600 secs) - long
        self.sysmon_node_presence_timeout = None  #  Node presence timeout in seconds if no messages (Min: 600,  Max: 86400) - long
        self.sysmon_probe_response_timeout = None  #  Probe response timeout in seconds (Min: 5,  Max: 60) - long
        self.stats_tsdb_server_address = None  #  Specifies the TSDB server location. - int
        self.two_factor_code_expiry = None  #  Two Factor Code Expiry in Seconds - int
        self.two_factor_code_length = None  #  Two Factor Code Length - int
        self.two_factor_code_seed_length = None  #  Two Factor Seed length in bytes - int
        self.vm_cache_size = None  #  LRU Map size for vm (min = 1000, max =100000) this value has to set based on memory given to VSD jvm not finalized. - int
        self.vm_resync_outstanding_interval = None  #  Outstanding VM resync interval (in secs). (min = 500, max =2000) system wide value - int
        self.vm_purge_time = None  #  Timers in sec for undefined vms to be deleted(min =60, max = 600). - int
        self.vm_resync_deletion_wait_time = None  #  After resync on vm , if no controller returns with a VM request with in the below timeframe then it will get deleted deletion wait time in min (min = 1, max =5) - int
        self.vm_unreachable_cleanup_time = None  #  Timers in sec for unreachable VMs for cleanup(min = 3600, max = 86400). - int
        self.vm_unreachable_time = None  #  Timers in sec for unreachable VMs (min =1800, max = 7200) - int
        self.vnid_lower_limit = None  #  Virtual network ID offset - int
        self.vnid_public_network_lower_limit = None  #  Virtual network ID public network lower limit - int
        self.vnid_public_network_upper_limit = None  #  Virtual network ID public network upper limit - int
        self.vnid_upper_limit = None  #  Virtual network ID upper limit - int
        self.vsc_on_same_version_as_vsd = None  #  This flag is used to indicate that whether VSC is on the same version as VSD or not. - int
        self.vsd_read_only_mode = None  #  True means VSD readonly mode enabled. False means VSD readonly mode disabled - int
        self.static_wan_service_purge_time = None  #  Timers in sec for unreacheable static WAN Services to be deleted(min =3600, max = 7200) - int
        
        self.expose_attribute(local_name=u"acl_allow_origin", remote_name=u"ACLAllowOrigin", attribute_type=int)
        self.expose_attribute(local_name=u"api_key_renewal_interval", remote_name=u"APIKeyRenewalInterval", attribute_type=long)
        self.expose_attribute(local_name=u"api_key_validity", remote_name=u"APIKeyValidity", attribute_type=long)
        self.expose_attribute(local_name=u"as_number", remote_name=u"ASNumber", attribute_type=long)
        self.expose_attribute(local_name=u"ad_gateway_purge_time", remote_name=u"ADGatewayPurgeTime", attribute_type=int)
        self.expose_attribute(local_name=u"avatar_base_path", remote_name=u"avatarBasePath", attribute_type=int)
        self.expose_attribute(local_name=u"avatar_base_url", remote_name=u"avatarBaseURL", attribute_type=int)
        self.expose_attribute(local_name=u"offset_customer_id", remote_name=u"offsetCustomerID", attribute_type=long)
        self.expose_attribute(local_name=u"customer_id_upper_limit", remote_name=u"customerIDUpperLimit", attribute_type=long)
        self.expose_attribute(local_name=u"customer_key", remote_name=u"customerKey", attribute_type=int)
        self.expose_attribute(local_name=u"dhcp_option_size", remote_name=u"DHCPOptionSize", attribute_type=int)
        self.expose_attribute(local_name=u"domain_tunnel_type", remote_name=u"domainTunnelType", attribute_type=int)
        self.expose_attribute(local_name=u"ejbca_ncpe_certificate_profile", remote_name=u"ejbcaNcpeCertificateProfile", attribute_type=int)
        self.expose_attribute(local_name=u"ejbca_ncpe_end_entity_profile", remote_name=u"ejbcaNcpeEndEntityProfile", attribute_type=int)
        self.expose_attribute(local_name=u"ejbca_vsp_root_ca", remote_name=u"ejbcaVspRootCa", attribute_type=int)
        self.expose_attribute(local_name=u"esi_id", remote_name=u"esiID", attribute_type=int)
        self.expose_attribute(local_name=u"event_log_cleanup_interval", remote_name=u"eventLogCleanupInterval", attribute_type=long)
        self.expose_attribute(local_name=u"event_log_entry_max_age", remote_name=u"eventLogEntryMaxAge", attribute_type=int)
        self.expose_attribute(local_name=u"event_processor_interval", remote_name=u"eventProcessorInterval", attribute_type=long)
        self.expose_attribute(local_name=u"event_processor_max_events_count", remote_name=u"eventProcessorMaxEventsCount", attribute_type=int)
        self.expose_attribute(local_name=u"event_processor_timeout", remote_name=u"eventProcessorTimeout", attribute_type=long)
        self.expose_attribute(local_name=u"evpnbgp_community_tag_as_number", remote_name=u"EVPNBGPCommunityTagASNumber", attribute_type=long)
        self.expose_attribute(local_name=u"evpnbgp_community_tag_lower_limit", remote_name=u"EVPNBGPCommunityTagLowerLimit", attribute_type=long)
        self.expose_attribute(local_name=u"evpnbgp_community_tag_upper_limit", remote_name=u"EVPNBGPCommunityTagUpperLimit", attribute_type=long)
        self.expose_attribute(local_name=u"inactive_timeout", remote_name=u"inactiveTimeout", attribute_type=long)
        self.expose_attribute(local_name=u"ldap_trust_store_certifcate", remote_name=u"LDAPTrustStoreCertifcate", attribute_type=int)
        self.expose_attribute(local_name=u"ldap_trust_store_password", remote_name=u"LDAPTrustStorePassword", attribute_type=int)
        self.expose_attribute(local_name=u"lru_cache_size_per_subnet", remote_name=u"LRUCacheSizePerSubnet", attribute_type=int)
        self.expose_attribute(local_name=u"alarms_max_per_object", remote_name=u"alarmsMaxPerObject", attribute_type=int)
        self.expose_attribute(local_name=u"page_max_size", remote_name=u"pageMaxSize", attribute_type=int)
        self.expose_attribute(local_name=u"max_response", remote_name=u"maxResponse", attribute_type=int)
        self.expose_attribute(local_name=u"ncpe_bootstrap_endpoint", remote_name=u"ncpeBootstrapEndpoint", attribute_type=int)
        self.expose_attribute(local_name=u"ncpe_config_endpoint", remote_name=u"ncpeConfigEndpoint", attribute_type=int)
        self.expose_attribute(local_name=u"ncpe_local_ui_url", remote_name=u"ncpeLocalUiUrl", attribute_type=int)
        self.expose_attribute(local_name=u"page_size", remote_name=u"pageSize", attribute_type=int)
        self.expose_attribute(local_name=u"post_processor_threads_count", remote_name=u"postProcessorThreadsCount", attribute_type=int)
        self.expose_attribute(local_name=u"reflexive_acl_timeout", remote_name=u"reflexiveACLTimeout", attribute_type=long)
        self.expose_attribute(local_name=u"rd_lower_limit", remote_name=u"RDLowerLimit", attribute_type=long)
        self.expose_attribute(local_name=u"rd_public_network_lower_limit", remote_name=u"RDPublicNetworkLowerLimit", attribute_type=long)
        self.expose_attribute(local_name=u"rd_public_network_upper_limit", remote_name=u"RDPublicNetworkUpperLimit", attribute_type=long)
        self.expose_attribute(local_name=u"rd_upper_limit", remote_name=u"RDUpperLimit", attribute_type=long)
        self.expose_attribute(local_name=u"rt_lower_limit", remote_name=u"RTLowerLimit", attribute_type=long)
        self.expose_attribute(local_name=u"rt_public_network_lower_limit", remote_name=u"RTPublicNetworkLowerLimit", attribute_type=long)
        self.expose_attribute(local_name=u"rt_public_network_upper_limit", remote_name=u"RTPublicNetworkUpperLimit", attribute_type=long)
        self.expose_attribute(local_name=u"rt_upper_limit", remote_name=u"RTUpperLimit", attribute_type=long)
        self.expose_attribute(local_name=u"offset_service_id", remote_name=u"offsetServiceID", attribute_type=long)
        self.expose_attribute(local_name=u"service_id_upper_limit", remote_name=u"serviceIDUpperLimit", attribute_type=long)
        self.expose_attribute(local_name=u"stack_trace_enabled", remote_name=u"stackTraceEnabled", attribute_type=int)
        self.expose_attribute(local_name=u"stats_collector_address", remote_name=u"statsCollectorAddress", attribute_type=int)
        self.expose_attribute(local_name=u"stats_collector_port", remote_name=u"statsCollectorPort", attribute_type=int)
        self.expose_attribute(local_name=u"stats_max_data_points", remote_name=u"statsMaxDataPoints", attribute_type=int)
        self.expose_attribute(local_name=u"stats_min_duration", remote_name=u"statsMinDuration", attribute_type=long)
        self.expose_attribute(local_name=u"stats_number_of_data_points", remote_name=u"statsNumberOfDataPoints", attribute_type=int)
        self.expose_attribute(local_name=u"subnet_resync_interval", remote_name=u"subnetResyncInterval", attribute_type=int)
        self.expose_attribute(local_name=u"subnet_resync_outstanding_interval", remote_name=u"subnetResyncOutstandingInterval", attribute_type=int)
        self.expose_attribute(local_name=u"sysmon_cleanup_task_interval", remote_name=u"sysmonCleanupTaskInterval", attribute_type=long)
        self.expose_attribute(local_name=u"sysmon_node_presence_timeout", remote_name=u"sysmonNodePresenceTimeout", attribute_type=long)
        self.expose_attribute(local_name=u"sysmon_probe_response_timeout", remote_name=u"sysmonProbeResponseTimeout", attribute_type=long)
        self.expose_attribute(local_name=u"stats_tsdb_server_address", remote_name=u"statsTSDBServerAddress", attribute_type=int)
        self.expose_attribute(local_name=u"two_factor_code_expiry", remote_name=u"twoFactorCodeExpiry", attribute_type=int)
        self.expose_attribute(local_name=u"two_factor_code_length", remote_name=u"twoFactorCodeLength", attribute_type=int)
        self.expose_attribute(local_name=u"two_factor_code_seed_length", remote_name=u"twoFactorCodeSeedLength", attribute_type=int)
        self.expose_attribute(local_name=u"vm_cache_size", remote_name=u"VMCacheSize", attribute_type=int)
        self.expose_attribute(local_name=u"vm_resync_outstanding_interval", remote_name=u"VMResyncOutstandingInterval", attribute_type=int)
        self.expose_attribute(local_name=u"vm_purge_time", remote_name=u"VMPurgeTime", attribute_type=int)
        self.expose_attribute(local_name=u"vm_resync_deletion_wait_time", remote_name=u"VMResyncDeletionWaitTime", attribute_type=int)
        self.expose_attribute(local_name=u"vm_unreachable_cleanup_time", remote_name=u"VMUnreachableCleanupTime", attribute_type=int)
        self.expose_attribute(local_name=u"vm_unreachable_time", remote_name=u"VMUnreachableTime", attribute_type=int)
        self.expose_attribute(local_name=u"vnid_lower_limit", remote_name=u"VNIDLowerLimit", attribute_type=int)
        self.expose_attribute(local_name=u"vnid_public_network_lower_limit", remote_name=u"VNIDPublicNetworkLowerLimit", attribute_type=int)
        self.expose_attribute(local_name=u"vnid_public_network_upper_limit", remote_name=u"VNIDPublicNetworkUpperLimit", attribute_type=int)
        self.expose_attribute(local_name=u"vnid_upper_limit", remote_name=u"VNIDUpperLimit", attribute_type=int)
        self.expose_attribute(local_name=u"vsc_on_same_version_as_vsd", remote_name=u"VSCOnSameVersionAsVSD", attribute_type=int)
        self.expose_attribute(local_name=u"vsd_read_only_mode", remote_name=u"VSDReadOnlyMode", attribute_type=int)
        self.expose_attribute(local_name=u"static_wan_service_purge_time", remote_name=u"staticWANServicePurgeTime", attribute_type=int)
        
        # Fetchers
        for key, value in kwargs.iteritems():
            if hasattr(self, key):
                setattr(self, key, value)



    @classmethod
    def get_remote_name(cls):
        """ Remote name that will be used to generates URI """

        return u"systemconfig"


