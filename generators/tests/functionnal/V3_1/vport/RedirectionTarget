{
    "apiVersion": "V3_1",
    "swaggerVersion": "1.2",
    "basePath": "/",
    "resourcePath": "/RedirectionTarget",
    "apis": [
        {
            "path": "/vminterfaces/{id}/redirectiontargets",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all vporttags for a given VM Interface with endpoint-type not set to NONE",
                    "type": "RedirectionTarget",
                    "nickname": "getVMINTERFACESRedirectionTargets",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/domains/{id}/redirectiontargets",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Create vportag under domain and read all vporttags that belong to a domain",
                    "type": "RedirectionTarget",
                    "nickname": "getDOMAINSRedirectionTargets",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Create vportag under domain and read all vporttags that belong to a domain",
                    "type": "RedirectionTarget",
                    "nickname": "postDOMAINSRedirectionTargets",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/vports/{id}/redirectiontargets",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Associate a vporttag to a given vport and read all vporttags in a vport",
                    "type": "RedirectionTarget",
                    "nickname": "getVPORTSRedirectionTargets",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "PUT",
                    "summary": "Associate a vporttag to a given vport and read all vporttags in a vport",
                    "type": "RedirectionTarget",
                    "nickname": "putVPORTSRedirectionTargets",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/bridgeinterfaces/{id}/redirectiontargets",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all vporttags for a given Bridge Interface with endpoint-type not set to NONE",
                    "type": "RedirectionTarget",
                    "nickname": "getBRIDGEINTERFACESRedirectionTargets",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/redirectiontargets",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all vporttags. Permitted only for user with csproot/cms role",
                    "type": "RedirectionTarget",
                    "nickname": "getRedirectionTargets",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/l2domains/{id}/redirectiontargets",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Create vportag under l2domain and read all vporttags that belong to a l2domain",
                    "type": "RedirectionTarget",
                    "nickname": "getL2DOMAINSRedirectionTargets",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "POST",
                    "summary": "Create vportag under l2domain and read all vporttags that belong to a l2domain",
                    "type": "RedirectionTarget",
                    "nickname": "postL2DOMAINSRedirectionTargets",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/hostinterfaces/{id}/redirectiontargets",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Read all vporttags for a given Host Interface with endpoint-type not set to NONE",
                    "type": "RedirectionTarget",
                    "nickname": "getHOSTINTERFACESRedirectionTargets",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        },
        {
            "path": "/redirectiontargets/{id}",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "Read, modify, delete vporttag",
                    "type": "RedirectionTarget",
                    "nickname": "putRedirectionTargets",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "DELETE",
                    "summary": "Read, modify, delete vporttag",
                    "type": "RedirectionTarget",
                    "nickname": "deleteRedirectionTargets",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                },
                {
                    "method": "GET",
                    "summary": "Read, modify, delete vporttag",
                    "type": "RedirectionTarget",
                    "nickname": "getRedirectionTargets",
                    "parameters": [
                        {
                            "name": "id",
                            "required": true,
                            "type": "string",
                            "paramType": "path"
                        }
                    ],
                    "responseMessages": [
                    ]
                }
            ]
        }
    ],
    "models": {
        "RedirectionTarget": {
            "id": "RedirectionTarget",
            "description":"A group/collection of vports that belong to the same domain",
            "properties": {
                "_fetchers":{
                    "type":"string",
                    "description":"internal property",
                    "enum":[
                            "VPort",
                            "VirtualIP",
                            "EventLog"
                    ]
                },
                "description": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Description of this redirection target",
                    "type": "string"
                },
                "endPointType": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "EndpointType defines the type of header rewrite and forwarding performed by VRS when the endpoint is used as a PBR destination. Possible Values - NONE/L3/VIRTUAL_WIRE Possible values are NONE, L3, VIRTUAL_WIRE, .",
                    "type": "enum",
                    "enum": [
                              "L3",
                              "VIRTUAL_WIRE",
                              "NONE"
                    ]
                },
                "ESI": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "ESI id, globally unique",
                    "type": "string"
                },
                "name": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Name of this redirection target",
                    "type": "string"
                },
                "redundancyEnabled": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Allow/Disallow redundant appliances and VIP",
                    "type": "boolean"
                },
                "templateID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Template to which this redirection target belongs to",
                    "type": "string"
                },
                "triggerType": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Trigger type, could be - NONE/GARP, THIS IS READ ONLY. Possible values are NONE, GARP, .",
                    "type": "enum",
                    "enum": [
                              "GARP",
                              "NONE"
                    ]
                },
                "virtualNetworkID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Auto Generated by VSD. Each vPortTag with redundancy=enable and EndpointType != none will have a globally unique ESI & VNID generated by VSD",
                    "type": "string"
                },
                "creationDate": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Holds the time that this object was created.",
                    "type": "date"
                },
                "lastUpdatedBy": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the user that last modified this object.",
                    "type": "string"
                },
                "lastUpdatedDate": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Determines the time that this object was last updated.",
                    "type": "date"
                },
                "owner": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "Identifies the user that has created this object.",
                    "type": "string"
                },
                "externalID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This attribute is set when an external management system is managing this object. When set, the VSD will issue a warning if the user tries to modify this object directly through the UI or the API. For example, if VMware vCloud or Openstack create a network, then this network cannot be deleted directly by a user without requiring extra confirmation. This allows integrations to separate between managed objects by external entities and directly managed objects.",
                    "type": "string"
                },
                "ID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is a unique ID for the object (UUID) that is auto-populated by the VSD and it is used in both the http URI or other objects to refer to the particular object.",
                    "type": "string"
                },
                "parentID": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is the ID of the parent object.",
                    "type": "string"
                },
                "parentType": {
                    "required": "false",
                    "uniqueItems": false,
                    "description": "This is the type of parent object for the particular object.",
                    "type": "string"
                }
            }
        }
    }
}
